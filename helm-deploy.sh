#!/bin/bash

set -e

RELEASE_NAME="kube-guard"
CHART_PATH="./helm/kube-guard"
NAMESPACE="kube-guard"

# Parse command line arguments
WEBHOOK_URL=""
MONITORED_NS="my-namespace"
VALUES_FILE=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --webhook-url)
      WEBHOOK_URL="$2"
      shift 2
      ;;
    --monitored-namespace)
      MONITORED_NS="$2"
      shift 2
      ;;
    --values)
      VALUES_FILE="$2"
      shift 2
      ;;
    -h|--help)
      echo "Usage: $0 [OPTIONS]"
      echo "Options:"
      echo "  --webhook-url URL          Mattermost webhook URL (required)"
      echo "  --monitored-namespace NS   Namespace to monitor (default: my-namespace)"
      echo "  --values FILE              Additional values file"
      echo "  -h, --help                 Show this help message"
      exit 0
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

# Check if webhook URL is provided
if [ -z "$WEBHOOK_URL" ]; then
  echo "Error: Mattermost webhook URL is required. Use --webhook-url option."
  echo "Run '$0 --help' for more information."
  exit 1
fi

echo "Building KubeGuard Docker image..."
docker build -t kube-guard:latest .

echo "Installing/upgrading KubeGuard with Helm..."

# Build Helm command
HELM_CMD="helm upgrade --install $RELEASE_NAME $CHART_PATH"
HELM_CMD="$HELM_CMD --create-namespace"
HELM_CMD="$HELM_CMD --set config.mattermost.webhookUrl=\"$WEBHOOK_URL\""
HELM_CMD="$HELM_CMD --set config.monitoredNamespace=\"$MONITORED_NS\""

# Add values file if provided
if [ -n "$VALUES_FILE" ]; then
  HELM_CMD="$HELM_CMD --values $VALUES_FILE"
fi

# Execute Helm command
eval $HELM_CMD

echo "Waiting for deployment to be ready..."
kubectl wait --for=condition=available --timeout=300s deployment/$RELEASE_NAME -n $NAMESPACE

echo "TLS certificates are automatically generated by Helm hooks."
echo "Checking certificate generation job..."
kubectl wait --for=condition=complete --timeout=300s job/$RELEASE_NAME-cert-gen -n $NAMESPACE || echo "Certificate generation job may still be running"

echo "Checking CA bundle update job..."
kubectl wait --for=condition=complete --timeout=300s job/$RELEASE_NAME-ca-bundle -n $NAMESPACE || echo "CA bundle update job may still be running"

echo ""
echo "============================================"
echo "KubeGuard deployed successfully with Helm!"
echo "============================================"
echo "Release name: $RELEASE_NAME"
echo "Namespace: $NAMESPACE"
echo "Monitored namespace: $MONITORED_NS"
echo ""
echo "To check status:"
echo "  helm status $RELEASE_NAME"
echo "  kubectl get pods -n $NAMESPACE"
echo ""
echo "To view logs:"
echo "  kubectl logs -n $NAMESPACE deployment/$RELEASE_NAME"
echo ""
echo "To update configuration:"
echo "  helm upgrade $RELEASE_NAME $CHART_PATH --set config.mattermost.webhookUrl=\"NEW_URL\""
echo ""
echo "To uninstall:"
echo "  helm uninstall $RELEASE_NAME"
echo ""